version: "3.8"  # Docker Compose file format version

services:
  postgres:
    image: postgres:15  # Official PostgreSQL v15 image
    container_name: postgres
    restart: always  # Always restart if it crashes
    environment:
      POSTGRES_USER: myuser         # DB username
      POSTGRES_PASSWORD: mypassword # DB password
      POSTGRES_DB: mydb             # Default database
    ports:
      - "5432:5432"  # Map local 5432 to container's 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent storage for DB data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Run SQL on first start

  zookeeper:
    image: bitnami/zookeeper:latest  # Zookeeper for Kafka coordination
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"  # Zookeeper client port
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"  # Simple auth for local dev

  kafka:
    image: bitnami/kafka:latest  # Kafka broker
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"  # Kafka client connection port
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  # PostgreSQL Admin Tool
  pgadmin:
    image: dpage/pgadmin4:latest  # pgAdmin web interface
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"  # Access pgAdmin at http://localhost:5050
    depends_on:
      - postgres

  # Kafka topic browser
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: always
    ports:
      - "9000:9000"  # Access Kafdrop at http://localhost:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka

  # Live dashboard for databases
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: always
    ports:
      - "3000:3000"  # Access Metabase at http://localhost:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: mydb
      MB_DB_PORT: 5432
      MB_DB_USER: myuser
      MB_DB_PASS: mypassword
      MB_DB_HOST: postgres
    depends_on:
      - postgres

volumes:
  postgres_data:
